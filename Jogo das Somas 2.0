'''
/*******************************************************************
Autor: Armando de Lima Almeida
Componente Curricular: Algoritmos I
Concluído em: 29/10/2022
Declaro que este código foi elaborado por mim de forma individual e não contém
nenhum trecho de código de colega ou de outro autor, tais como provindos de livros e
apostilas, e páginas ou documentos eletrônicos da internet. Qualquer trecho de código
de outra autoria que não a minha está destacado com uma citação do autor e a fonte do
código, e estou ciente que estes trechos não serão considerados para fins de avaliação.
**********************************************************************/
'''
import random
def modo_facil():
    #essa função forma a matriz e faz soma das linhas e das colunas
    def formacao_matriz(somaLinha,somaColuna,matriz_dos_numeros_escondidos,matriz_dos_x):
        #numeros contem os numeros das seções que serão embaralhados pela função shuffle a cada loop
        numeros = [1,2,3,4]
        #linha da matriz 1,2 e 3 servem para adicionar os numeros nas determinadas linhas, assim como posicao na matriz, adicionarão nas determinadas linhas e posições
        linha_da_matriz = 0; linha_da_matriz_2 = 1; posicao_na_matriz = 0; posicao_na_matriz_2   = 1
        for i in range(4):
            random.shuffle(numeros)
            matriz_dos_numeros_escondidos[linha_da_matriz][posicao_na_matriz] = numeros[0]
            matriz_dos_numeros_escondidos[linha_da_matriz][posicao_na_matriz_2] = numeros[1]
            matriz_dos_numeros_escondidos[linha_da_matriz_2][posicao_na_matriz] = numeros[2]
            matriz_dos_numeros_escondidos[linha_da_matriz_2][posicao_na_matriz_2] = numeros[3]
            #endereços das linhas e posições são alterados conforme preenchem.
            if i == 0:
                linha_da_matriz+=2; linha_da_matriz_2+=2
            elif i == 1:
                linha_da_matriz = 0; linha_da_matriz_2 = 1
                posicao_na_matriz+=2; posicao_na_matriz_2+=2
            elif i == 2:
                linha_da_matriz+=2; linha_da_matriz_2+=2
        #soma linha
        for linha in range(4):
            soma = 0
            for coluna in range(4):
                soma+=matriz_dos_numeros_escondidos[linha][coluna]
            somaLinha.append(soma)
        #soma coluna
        for coluna in range(4):
            somaCOLUNA = 0
            for linha in range(4):
                somaCOLUNA+=matriz_dos_numeros_escondidos[linha][coluna]
            somaColuna.append(somaCOLUNA)
        #adicionar o '-' e o resultado da soma das colunas ao lado da matriz 
        for i in range(4):
            matriz_dos_x[i].append('-')
            matriz_dos_x[i].append(somaLinha[i])
        #matriz auxiliar para a aparecer a soma de cada coluna. 
        auxiliar = [['-','-','-','-']]
        auxiliar.append(somaColuna)
        return auxiliar


    #pontuacao para diagonal
    def pontuacao_diagonal(matriz_dos_x, vencedor,n1,n2,matriz_principal,Jogadores,mais_um_auxiliar):
        #verifica se os valores da matriz escondida foram revelados 
        if 'x' != matriz_dos_x[0][0] and 'x' != matriz_dos_x[1][1] and 'x' != matriz_dos_x[2][2] and 'x' != matriz_dos_x[3][3]:
            if len(mais_um_auxiliar) == 0:
                pontuacao = 0
                #faz esse for para armazenar o valor daquela posicao, ou seja, pontuacao acumula os valores da posicao 
                for i in range(4):
                    for j in range(4):
                        if i == j:
                            pontuacao+=matriz_principal[i][j]
                pontuacao*=2
                #faz a definição do jogador vencedor
                if vencedor % 2 == 0:
                    Jogadores[n2] += pontuacao
                else:
                    Jogadores[n1] += pontuacao
                mais_um_auxiliar.append(1)
                return 'Diagonal foi descoberta'


    #pontuacao para coluna
    def pontuacao_para_coluna(vencedor,pontuacao_coluna, matrix_dos_x,Jogadores,n1,n2):
        pontuacao = 0
        #faz a verificação manualmente se os numeros das colunas foram revelados. são if's abertos, já que se uma linha for revelada, e depois outra, caso com a utilização de 
        #elifs, ele não iria atribuir a pontuação do proximo, e atribuir apenas o 0 a já revelada anteiormente, o que teriamos um bug. 
        if matrix_dos_x[0][0] != 'x' and matrix_dos_x[1][0] != 'x' and matrix_dos_x[2][0] != 'x' and matrix_dos_x[3][0] != 'x':
            pontuacao+=pontuacao_coluna[0]
            pontuacao_coluna[0] = 0
        if matrix_dos_x[0][1] != 'x' and matrix_dos_x[1][1] != 'x' and matrix_dos_x[2][1] != 'x' and matrix_dos_x[3][1] != 'x':
            pontuacao+=pontuacao_coluna[1]
            pontuacao_coluna[1] = 0
        if matrix_dos_x[0][2] != 'x' and matrix_dos_x[1][2] != 'x' and matrix_dos_x[2][2] != 'x' and matrix_dos_x[3][2] != 'x':
            pontuacao+=pontuacao_coluna[2]
            pontuacao_coluna[2] = 0
        if matrix_dos_x[0][3] != 'x' and matrix_dos_x[1][3] != 'x' and matrix_dos_x[2][3] != 'x' and matrix_dos_x[3][3] != 'x':
            pontuacao+=pontuacao_coluna[3]
            pontuacao_coluna[3] = 0
        #atribuição ao vencedor
        if vencedor % 2 == 0:
            Jogadores[n2] += pontuacao
        else:
            Jogadores[n1] += pontuacao


    #pontuacao para linha
    def pontuacao_para_linha(vencedor,pontuacao_linha, matrix_dos_x,Jogadores,n1,n2):
        pontuacao = 0;auxiliar_para_pontuacao = 0
        for i in matrix_dos_x:
            # verifica se x não está na linha
            if 'x' not in i:
                pontuacao+=pontuacao_linha[auxiliar_para_pontuacao]
                pontuacao_linha[auxiliar_para_pontuacao] = 0
                matrix_dos_x[auxiliar_para_pontuacao][5] = 0
            auxiliar_para_pontuacao+=1
        if vencedor %2 == 0:
            Jogadores[n2] += pontuacao
        else:
            Jogadores[n1] += pontuacao


    #atribuindo valor a matriz x
    def checagem(numero,secao,matriz_dos_numeros_escondidos,matriz_dos_x,aux,somaLinha,somaColuna,Jogadores,n1,n2,mais_um_auxiliar):
        #essa função serve exclusivamente para fazer a revelação do numero escondido
        def revelador (numero,secao, matriz_dos_numeros_escondidos, matriz_dos_x):
            #checador de posição serve para verificzr se o numero escolhido está na posição da lista
            checador_de_posicao_1 = 0; checador_de_posicao_2 = 1
            #linha serve para, com base na seção escolhida, fazer a procura corretamente
            linhas1 = 0; linha2 = 1
            if secao == 1:
                pass
            elif secao == 2:
                checador_de_posicao_1 = 2; checador_de_posicao_2 = 3
            elif secao == 3:
                linhas1=2; linha2=3
            elif secao == 4:
                checador_de_posicao_1 = 2; checador_de_posicao_2 = 3
                linhas1=2; linha2=3
            elif secao != 1 and secao != 2 and secao != 3 and secao != 4 :
                return 'secao nao encontrada'
            # se o numero estiver nas cordenadas coletadas nas linhas anteriores, a variavel pos recebe a posição para fazer a subistituição no final
            # ou seja, com base na posição ele revela na matriz em que possue os caracteres    
            if numero == matriz_dos_numeros_escondidos[linhas1][checador_de_posicao_1] or numero == matriz_dos_numeros_escondidos[linhas1][checador_de_posicao_2]:
                if numero == matriz_dos_numeros_escondidos[linhas1][checador_de_posicao_1]:
                    pos  = checador_de_posicao_1
                elif numero == matriz_dos_numeros_escondidos[linhas1][checador_de_posicao_2]:
                    pos = checador_de_posicao_2
                matriz_dos_x[linhas1][pos] = numero
            elif numero == matriz_dos_numeros_escondidos[linha2][checador_de_posicao_1] or numero == matriz_dos_numeros_escondidos[linha2][checador_de_posicao_2]:
                if numero == matriz_dos_numeros_escondidos[linha2][checador_de_posicao_1]:
                    pos = checador_de_posicao_1
                elif numero == matriz_dos_numeros_escondidos[linha2][checador_de_posicao_2]:
                    pos = checador_de_posicao_2
                matriz_dos_x[linha2][pos] = numero
        revelador(numero,secao,matriz_dos_numeros_escondidos,matriz_dos_x)
        #verificação de ausencia do x nas linhas, para poder fazer a atribuição da pontuação na função
        if 'x' not in matriz_dos_x[0] or 'x' not in matriz_dos_x[1] or 'x' not in matriz_dos_x[2] or 'x' not in matriz_dos_x[3]:
            pontuacao_para_linha(aux, somaLinha,matriz_dos_x,Jogadores,n1,n2)
        #verificação de ausencia do x nas colunas, para poder fazer a atribuição da pontuação na função
        pontuacao_para_coluna(aux,somaColuna, matriz_dos_x,Jogadores,n1,n2)
        #verificação de ausencia do x na diagonal, para poder fazer a atribuição da pontuação na função
        resposta = pontuacao_diagonal(matriz_dos_x, aux,n1,n2,matriz_dos_numeros_escondidos,Jogadores,mais_um_auxiliar)
        return resposta
            

    matriz_dos_numeros_escondidos,matriz_dos_x =  [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],[['x','x','x','x'],['x','x','x','x'],['x','x','x','x'],['x','x','x','x']]
    somaLinha,somaColuna = [],[] 
    Jogadores = {}
    #aux serve para saber qual jogador está jogando, se o um ou o dois
    # mais_um_auxiliar, serve para a atribuição de pontuação da diagonal. Sem ela, a pontuação seria atribuida, mesmo que ela já fosse descoberta
    aux = 0; mais_um_auxiliar = []
    auxiliar = formacao_matriz(somaLinha,somaColuna,matriz_dos_numeros_escondidos,matriz_dos_x)

    #codigo principal do nivel 1
    n1 = input('Digite o nome do jogador 1: ')
    n2 = input('Digite o nome do jogador 2: ')
    Jogadores[n1] = 0;Jogadores[n2] = 0
    quebra_de_loop = True
    while quebra_de_loop == True:
        #print do placar dos jogadores
        for pontos in Jogadores:
            print(f'  {pontos}:   \t{Jogadores[pontos]} ',end='\t')
        print()
        #print da matriz com os x
        for linha in range(4):
            for coluna in range(4+2):
                print('   ',matriz_dos_x[linha][coluna],end='    ')
            print()
        #print da matriz com as somas das colunas
        for linha in range(2):
            for coluna in range(4):
                print('   ',auxiliar[linha][coluna],end='    ')
            print()
        print()
        # se aux for par, o jogador 1 escolhe, se for impar o jogador escolhe
        if aux %2 == 0:
            #condição para validar entrada, para não quebrar o codigo
            while quebra_de_loop == True:
                try:
                    numero = int(input(f'Jogador {n1} escolha seu numero: '))
                    aux+=1
                    quebra_de_loop = False
                except:
                    print('Voce precisa digitar um numero!')
        else:
            quebra_de_loop = True
            while quebra_de_loop == True:
                try:
                    numero = int(input(f'Jogador {n2} escolha seu numero: '))
                    aux+=1
                    quebra_de_loop = False
                except:
                    print('Voce precisa digitar um numero!')
        quebra_de_loop = True
        while quebra_de_loop == True:
            try:
                secao = int(input('Qual a secao: '))
                quebra_de_loop = False
            except:
                print('Voce precisa digitar um numero!')
        if secao > 4 or secao < 1:
            print('Secao é de um até quatro, voce perdeu sua vez :( ')

        quebra_de_loop = True
        mensagem_diagonal = checagem(numero,secao,matriz_dos_numeros_escondidos,matriz_dos_x,aux,somaLinha,somaColuna,Jogadores,n1,n2,mais_um_auxiliar)
        if mensagem_diagonal != None:
            print('##',mensagem_diagonal,'##')
        print()
        if 'x' not in matriz_dos_x[0] and 'x' not in matriz_dos_x[1] and 'x' not in matriz_dos_x[2] and 'x' not in matriz_dos_x[3]:       
            quebra_de_loop = False
            
    #descobrindo vencedor
    auxiliar_de_pontuacao = 0
    for i in Jogadores:
        if auxiliar_de_pontuacao == 0:
            nome_1 = i
            pontos_1 = Jogadores[i]
            auxiliar_de_pontuacao+=1
        else:
            nome_2 = i
            pontos_2 = Jogadores[i]      
    if pontos_2 > pontos_1:
        print(f'O jogador {nome_2} venceu com uma pontuação de {pontos_2}')
    elif pontos_2 < pontos_1:
        print(f'O jogador {nome_1} venceu com uma pontuação de {pontos_1}')
    else:
        print(f'Os jogadores ficaram empatados com uma pontuação de {pontos_1}')

def modo_dificil():
    def formacao_matriz(somaLinha,somaColuna,matriz_dos_numeros_escondidos,matriz_dos_x):
        numeros = [1,2,3,4,5,6,7,8,9]
        linha_da_matriz = 0; linha_da_matriz_2 = 1; linha_da_matriz_3 = 2
        posicao_na_matriz = 0; posicao_na_matriz_2 = 1; posicao_na_matriz_3 = 2
        for i in range(9):
            random.shuffle(numeros)
            matriz_dos_numeros_escondidos[linha_da_matriz][posicao_na_matriz] = numeros[0]
            matriz_dos_numeros_escondidos[linha_da_matriz][posicao_na_matriz_2] = numeros[1]
            matriz_dos_numeros_escondidos[linha_da_matriz][posicao_na_matriz_3] = numeros[2]
            matriz_dos_numeros_escondidos[linha_da_matriz_2][posicao_na_matriz] = numeros[3]
            matriz_dos_numeros_escondidos[linha_da_matriz_2][posicao_na_matriz_2] = numeros[4]
            matriz_dos_numeros_escondidos[linha_da_matriz_2][posicao_na_matriz_3] = numeros[5]
            matriz_dos_numeros_escondidos[linha_da_matriz_3][posicao_na_matriz] = numeros[6]
            matriz_dos_numeros_escondidos[linha_da_matriz_3][posicao_na_matriz_2] = numeros[7]
            matriz_dos_numeros_escondidos[linha_da_matriz_3][posicao_na_matriz_3] = numeros[8]
            
            if i == 0:
                posicao_na_matriz = 3;posicao_na_matriz_2 = 4; posicao_na_matriz_3 = 5
            elif i == 1:
                posicao_na_matriz = 6;posicao_na_matriz_2 = 7; posicao_na_matriz_3 = 8
            elif i == 2:
                posicao_na_matriz = 0;posicao_na_matriz_2 = 1; posicao_na_matriz_3 = 2
                linha_da_matriz = 3; linha_da_matriz_2 = 4; linha_da_matriz_3 = 5
            elif i == 3:
                posicao_na_matriz = 3;posicao_na_matriz_2 = 4; posicao_na_matriz_3 = 5
            elif i == 4:
                posicao_na_matriz = 6;posicao_na_matriz_2 = 7; posicao_na_matriz_3 = 8
            elif i == 5:
                posicao_na_matriz = 0;posicao_na_matriz_2 = 1; posicao_na_matriz_3 = 2
                linha_da_matriz = 6; linha_da_matriz_2 = 7; linha_da_matriz_3 = 8
            elif i == 6:
                posicao_na_matriz = 3;posicao_na_matriz_2 = 4; posicao_na_matriz_3 = 5
            elif i == 7:
                posicao_na_matriz = 6;posicao_na_matriz_2 = 7; posicao_na_matriz_3 = 8
        
        #soma das linhas
        for i in range(9):
            soma = 0
            for j in range(9):
                soma+=matriz_dos_numeros_escondidos[i][j]
            somaLinha.append(soma)

        #soma das colunas
        for coluna in range(9):
            soma = 0
            for linha in range(9):
                soma+=matriz_dos_numeros_escondidos[linha][coluna]
            somaColuna.append(soma)

        for i in range(9):
            matriz_dos_x[i].append(somaLinha[i])
        auxiliar = [['  ','  ','  ','  ','  ','  ','  ','  ','  ']]
        auxiliar.append(somaColuna)
        return auxiliar
        
    #pontuacao para Diagonal
    def pontuacao_diagonal(matriz_dos_x, vencedor, n1,n2,matriz_dos_numeros_escondidos, Jogadores,mais_um_auxiliar):
        if 'x' != matriz_dos_x[0][0] and 'x' != matriz_dos_x[1][1] and 'x' != matriz_dos_x[2][2] and 'x' != matriz_dos_x[3][3] and 'x' != matriz_dos_x[4][4] and 'x' != matriz_dos_x[5][5] and 'x' != matriz_dos_x[6][6] and 'x' != matriz_dos_x[7][7] and 'x' != matriz_dos_x[8][8]: 
            if len(mais_um_auxiliar) == 0:
                pontuacao = 0
                for i in range(9):
                    for j in range(9):
                        if i == j:
                            pontuacao+=matriz_dos_numeros_escondidos[i][j]
                pontuacao*=2
                if vencedor % 2 == 0:
                    Jogadores[n2]+=pontuacao
                else:
                    Jogadores[n1] += pontuacao
                mais_um_auxiliar.append(1)
                return 'Diagonal foi descoberta!'
    
    
    #pontuacao para coluna
    def pontuacao_para_coluna(vencedor,pontuacao_coluna, matriz_de_x, Jogadores,n1,n2):
        pontuacao = 0
        if matriz_de_x[0][0] != 'x' and matriz_de_x[1][0] != 'x' and matriz_de_x[2][0] != 'x' and matriz_de_x[3][0] != 'x' and matriz_de_x[4][0] != 'x' and matriz_de_x[5][0] != 'x' and matriz_de_x[6][0] != 'x' and matriz_de_x[7][0] != 'x' and matriz_de_x[8][0] != 'x':
            pontuacao+=pontuacao_coluna[0]
            pontuacao_coluna[0] = 0
        if matriz_de_x[0][1] != 'x' and matriz_de_x[1][1] != 'x' and matriz_de_x[2][1] != 'x' and matriz_de_x[3][1] != 'x' and matriz_de_x[4][1] != 'x' and matriz_de_x[5][1] != 'x' and matriz_de_x[6][1] != 'x' and matriz_de_x[7][1] != 'x' and matriz_de_x[8][1] != 'x':
            pontuacao+=pontuacao_coluna[1]
            pontuacao_coluna[1] = 0 
        if matriz_de_x[0][2] != 'x' and matriz_de_x[1][2] != 'x' and matriz_de_x[2][2] != 'x' and matriz_de_x[3][2] != 'x' and matriz_de_x[4][2] != 'x' and matriz_de_x[5][2] != 'x' and matriz_de_x[6][2] != 'x' and matriz_de_x[7][2] != 'x' and matriz_de_x[8][2] != 'x':
            pontuacao+=pontuacao_coluna[2]
            pontuacao_coluna[2] = 0
        if matriz_de_x[0][3] != 'x' and matriz_de_x[1][3] != 'x' and matriz_de_x[2][3] != 'x' and matriz_de_x[3][3] != 'x' and matriz_de_x[4][3] != 'x' and matriz_de_x[5][3] != 'x' and matriz_de_x[6][3] != 'x' and matriz_de_x[7][3] != 'x' and matriz_de_x[8][3] != 'x':
            pontuacao+=pontuacao_coluna[3]
            pontuacao_coluna[3] = 0
        if matriz_de_x[0][4] != 'x' and matriz_de_x[1][4] != 'x' and matriz_de_x[2][4] != 'x' and matriz_de_x[3][4] != 'x' and matriz_de_x[4][4] != 'x' and matriz_de_x[5][4] != 'x' and matriz_de_x[6][4] != 'x' and matriz_de_x[7][4] != 'x' and matriz_de_x[8][4] != 'x':
            pontuacao+=pontuacao_coluna[4]
            pontuacao_coluna[4] = 0
        if matriz_de_x[0][5] != 'x' and matriz_de_x[1][5] != 'x' and matriz_de_x[2][5] != 'x' and matriz_de_x[3][5] != 'x' and matriz_de_x[4][5] != 'x' and matriz_de_x[5][5] != 'x' and matriz_de_x[6][5] != 'x' and matriz_de_x[7][5] != 'x' and matriz_de_x[8][5] != 'x':
            pontuacao+=pontuacao_coluna[5]
            pontuacao_coluna[5] = 0
        if matriz_de_x[0][6] != 'x' and matriz_de_x[1][6] != 'x' and matriz_de_x[2][6] != 'x' and matriz_de_x[3][6] != 'x' and matriz_de_x[4][6] != 'x' and matriz_de_x[5][6] != 'x' and matriz_de_x[6][6] != 'x' and matriz_de_x[7][6] != 'x' and matriz_de_x[8][6] != 'x':
            pontuacao+=pontuacao_coluna[6]
            pontuacao_coluna[6] = 0
        if matriz_de_x[0][7] != 'x' and matriz_de_x[1][7] != 'x' and matriz_de_x[2][7] != 'x' and matriz_de_x[3][7] != 'x' and matriz_de_x[4][7] != 'x' and matriz_de_x[5][7] != 'x' and matriz_de_x[6][7] != 'x' and matriz_de_x[7][7] != 'x' and matriz_de_x[8][7] != 'x':
            pontuacao+=pontuacao_coluna[7]
            pontuacao_coluna[7] = 0
        if matriz_de_x[0][8] != 'x' and matriz_de_x[1][8] != 'x' and matriz_de_x[2][8] != 'x' and matriz_de_x[3][8] != 'x' and matriz_de_x[4][8] != 'x' and matriz_de_x[5][8] != 'x' and matriz_de_x[6][8] != 'x' and matriz_de_x[7][8] != 'x' and matriz_de_x[8][8] != 'x':
            pontuacao+=pontuacao_coluna[8]
            pontuacao_coluna[8] = 0
        #atrubuição de pontuação
        if vencedor %2 == 0:
            Jogadores[n2] +=pontuacao
        else:
            Jogadores[n1] += pontuacao
            

    #pontuacao para linha
    def pontuacao_para_linha(vencedor,pontuacao_linha, matriz_dos_x, Jogadores,n1,n2):
        pontuacao = 0; auxiliar_para_pontuacao = 0
        for i in matriz_dos_x:
            if 'x' not in i:
                pontuacao+=pontuacao_linha[auxiliar_para_pontuacao]
                pontuacao_linha[auxiliar_para_pontuacao] = 0
                matriz_dos_x[auxiliar_para_pontuacao][9] = 0
            auxiliar_para_pontuacao+=1
        if vencedor %2==0:
            Jogadores[n2] += pontuacao
        else:
            Jogadores[n1] += pontuacao
            
            
    def checagem(numero,secao,matriz_dos_numeros_escondidos,matriz_dos_x,aux,somaLinha,somaColuna,Jogadores,n1,n2,mais_um_auxiliar):
        def revelador(numero,secao, matriz_dos_numero_escondidos, matriz_dos_x):
            linha1 = 0; linha2 = 1; linha3 = 2
            checador_posicao_1 = 0; checador_posicao_2 = 1;checador_posicao_3 = 2
            if secao == 1:
                pass
            elif secao == 2:
                checador_posicao_1 = 3; checador_posicao_2 = 4;checador_posicao_3 = 5
            elif secao == 3:
                checador_posicao_1 = 6; checador_posicao_2 = 7;checador_posicao_3 = 8
            elif secao == 4:
                linha1 = 3; linha2 = 4; linha3 = 5
            elif secao == 5:
                linha1 = 3; linha2 = 4; linha3 = 5
                checador_posicao_1 = 3; checador_posicao_2 = 4;checador_posicao_3 = 5
            elif secao == 6:
                linha1 = 3; linha2 = 4; linha3 = 5
                checador_posicao_1 = 6; checador_posicao_2 = 7;checador_posicao_3 = 8
            elif secao == 7:
                linha1 = 6; linha2 = 7; linha3 = 8
            elif secao == 8:
                linha1 = 6; linha2 = 7; linha3 = 8
                checador_posicao_1 = 3; checador_posicao_2 = 4;checador_posicao_3 = 5
            elif secao == 9:
                linha1 = 6; linha2 = 7; linha3 = 8
                checador_posicao_1 = 6; checador_posicao_2 = 7;checador_posicao_3 = 8
            
            if numero == matriz_dos_numero_escondidos[linha1][checador_posicao_1] or numero == matriz_dos_numero_escondidos[linha1][checador_posicao_2] or numero == matriz_dos_numero_escondidos[linha1][checador_posicao_3]:
                #checagem na primeira linha
                if numero == matriz_dos_numero_escondidos[linha1][checador_posicao_1]:
                    pos = checador_posicao_1
                elif numero == matriz_dos_numero_escondidos[linha1][checador_posicao_2]:
                    pos = checador_posicao_2
                elif numero == matriz_dos_numero_escondidos[linha1][checador_posicao_3]:
                    pos = checador_posicao_3
                matriz_dos_x[linha1][pos] = numero
            elif numero == matriz_dos_numero_escondidos[linha2][checador_posicao_1] or numero == matriz_dos_numero_escondidos[linha2][checador_posicao_2] or numero == matriz_dos_numero_escondidos[linha2][checador_posicao_3]:
                #checagem na segunda linha1
                if numero == matriz_dos_numero_escondidos[linha2][checador_posicao_1]:
                    pos = checador_posicao_1
                elif numero == matriz_dos_numero_escondidos[linha2][checador_posicao_2]:
                    pos = checador_posicao_2
                elif numero == matriz_dos_numero_escondidos[linha2][checador_posicao_3]:
                    pos = checador_posicao_3
                matriz_dos_x[linha2][pos] = numero
            elif numero == matriz_dos_numero_escondidos[linha3][checador_posicao_1] or numero == matriz_dos_numero_escondidos[linha3][checador_posicao_2] or numero == matriz_dos_numero_escondidos[linha3][checador_posicao_3]:
                #checagem na terceira linha
                if numero == matriz_dos_numero_escondidos[linha3][checador_posicao_1]:
                    pos = checador_posicao_1
                elif numero == matriz_dos_numero_escondidos[linha3][checador_posicao_2]:
                    pos = checador_posicao_2
                elif numero == matriz_dos_numero_escondidos[linha3][checador_posicao_3]:
                    pos = checador_posicao_3
                matriz_dos_x[linha3][pos] = numero
        revelador(numero,secao,matriz_dos_numeros_escondidos,matriz_dos_x)
        if 'x' not in matriz_dos_x[0] or 'x' not in matriz_dos_x[1] or 'x' not in matriz_dos_x[2]or 'x' not in matriz_dos_x[3]or 'x' not in matriz_dos_x[4]or 'x' not in matriz_dos_x[5]or 'x' not in matriz_dos_x[6]or 'x' not in matriz_dos_x[7]or 'x' not in matriz_dos_x[8]:
            pontuacao_para_linha(aux, somaLinha,matriz_dos_x,Jogadores,n1,n2)
        pontuacao_para_coluna(aux, somaColuna,matriz_dos_x,Jogadores,n1,n2)
        resposta = pontuacao_diagonal(matriz_dos_x,aux,n1,n2,matriz_dos_numeros_escondidos,Jogadores,mais_um_auxiliar)
        return resposta
                                            
    matriz_dos_x,matriz_dos_numeros_escondidos,somaLinha,somaColuna = [],[],[],[]
    Jogadores = {};aux = 0;mais_um_auxiliar = []
    #formação matriz de x
    for linha in range(9):
        x = []
        for coluna in range(9):
            x.append('x')
        matriz_dos_x.append(x)
    #formação da matriz dos numeros escondidos, para poder ter as posições aplicadas na função
    for linha in range(9):
        x = []
        for coluna in range(9):
            x.append(0)
        matriz_dos_numeros_escondidos.append(x)
    auxiliar = formacao_matriz(somaLinha,somaColuna,matriz_dos_numeros_escondidos,matriz_dos_x)
    #codigo principal do nivel 2
    n1 = input('Digite o nome do jogador 1: ')
    n2 = input('Digite o nome do jogador 2: ')
    Jogadores[n1] = 0; Jogadores[n2] = 0
    quebra_de_loop = True
    while quebra_de_loop == True:
        for pontos in Jogadores:
            print(f'\t{pontos}:   \t{Jogadores[pontos]} ',end='\t\t\t')
        print()
        #exibição da matriz
        for linha in range(9):
            for coluna in range(9+1):
                print('  ',matriz_dos_x[linha][coluna],end='     ')
            print()
        #exibição da matriz com as somas das colunas
        for linha in range(2):
            for coluna in range(9):
                print('  ',auxiliar[linha][coluna],end='    ')
            print()
        print()
        if aux % 2 == 0:
            while quebra_de_loop == True:
                try:
                    numero = int(input(f'Jogador {n1} escolha seu numero: '))
                    aux+=1
                    quebra_de_loop = False
                except:
                    print('Voce precisa digitar um numero!')
        else:
            quebra_de_loop = True
            while quebra_de_loop == True:
                try: 
                    numero = int(input(f'Jogador {n2} escolha seu numero: '))
                    aux+=1
                    quebra_de_loop = False
                except:
                    print('Voce precisa digitar um numero!')
        quebra_de_loop = True
        while quebra_de_loop == True:
            try:
                secao = int(input('Qual a secao: '))
                quebra_de_loop = False
            except:
                print('Voce precisa digitar um numero!')
        if secao > 9 or secao < 1:
            print('Secao é de um até nove, voce perdeu sua vez :( ')
        quebra_de_loop = True
        mensagem_diagonal = checagem(numero,secao,matriz_dos_numeros_escondidos,matriz_dos_x,aux,somaLinha ,somaColuna,Jogadores,n1,n2,mais_um_auxiliar)
        if mensagem_diagonal != None:
            print('##',mensagem_diagonal,'##')
        print()
        if 'x' not in matriz_dos_x[0] and 'x' not in matriz_dos_x[1] and 'x' not in matriz_dos_x[2] and 'x' not in matriz_dos_x[3] and 'x' not in matriz_dos_x[4] and 'x' not in matriz_dos_x[5] and'x' not in matriz_dos_x[6] and'x' not in matriz_dos_x[7] and'x' not in matriz_dos_x[8]:
            quebra_de_loop = False
            
    #descobrindo vencedor
    auxiliar_de_pontuacao = 0
    for i in Jogadores:
        if auxiliar_de_pontuacao == 0:
            nome_1 = i
            pontos_1 = Jogadores[i]
            auxiliar_de_pontuacao+=1
        else:
            nome_2 = i
            pontos_2 = Jogadores[i]
    if pontos_2 > pontos_1:
        print(f'O jogador {nome_2} venceu com uma pontuação de {pontos_2}')
    elif pontos_1 > pontos_2:
        print(f'O jogador {nome_1} venceu com uma pontuação de {pontos_1}')
    else:
        print(f'Os dois jogadores empataram com uma pontuação de {pontos_2}')    
def tutorial():
    inf = 1
    while inf != '0':
        print('\t**Seja bem vindo ao jogo das somas**')
        print('Se voce é novo ou não aqui, irei te passar as informações do jogo')
        print('[1] quero saber como funciona o jogo\n[2] quero saber como funciona o modo facil\n[3] quero saber como funciona o modo dificil\n[0] quero jogaar!!!!')
        inf = input('Primeiramente escolha qual informação voce quer saber: ')
        if inf == '1':
            print('- O jogo possue um tabuleiro com numeros escondidos \n- Seu objetivo é encontrar todos os numeros de uma linha, coluna ou diagonal')
            print('- a pontuação das linhas e diagonais ficam a mostra ao lado ou abaixo \n- A pontuação é a soma dos numeros')
            print('- vence quem descobrir aglomerar o maior descobrimento de linha e coluna')
        elif inf == '2':
            print_1 = ['O jogo é organizado por seções, aqui estão amostra delas','\t   1      2','\t x   x  | x  x  p','\t x   x  | x  x  p','\t -------------',
            '\t   3       4','\t x   x  | x  x  p','\t x   x  | x  x  p','\t p   p    p  p ','p - pontos | x - numeros escondidos',
            'Com isso, voce escolhe um numero e uma secao, e ele aparecerá na tela','Exemplo, voce escolhe secao 1 numero 2, com isso: ','\t   1       2',
            '\t x   2  | x  x  p','\t x   x  | x  x  p','\t -------------','\t   3       4','\t x   x  | x  x  p','\t x   x  | x  x  p',
                        '\t p   p    p  p ']
            for i in range(len(print_1)):
                print(print_1[i])
            print()
        elif inf == '3':
            print('O modo dificil tem essa representação')
            print('Sendo a questão a mesma do modo facil')
            print()
            print_3 = ['\t    1          2         3','\t x  x  x  | x  x  x | x  x  x  p','\t x  x  x  | x  x  x | x  x  x  p','\t x  x  x  | x  x  x | x  x  x  p',
            '\t ----------------------------','\t    4          5         6','\t x  x  x  | x  x  x | x  x  x  p','\t x  x  x  | x  x  x | x  x  x  p',
            '\t x  x  x  | x  x  x | x  x  x  p','\t-----------------------------','\t    7          8         9','\t x  x  x  | x  x  x | x  x  x  p',
            '\t x  x  x  | x  x  x | x  x  x  p','\t x  x  x  | x  x  x | x  x  x  p','\t p  p  p    p  p  p   p  p  p']  
            for i in range(len(print_3)):
                print(print_3[i])
            print()
        elif inf == '0':
            print('Lembrando que, com o intuito de deixar o jogo mais dificil')
            print('As seções mostradas aqui, não aparecerão no tabuleiro, mas existirão!')
            print('Bom jogo! :D')
tutorial()        
while True:
    print('-----JOGO DAS SOMAS 2.0-----')
    print()
    print('Seja bem vindo ao jogo das somas')
    print('[1] Modo facil ')
    print('[2] Modo dificil')
    print('[3] Ver tutorial')
    print('[0] Sair')
    resposta = input('Sua escolha: ')
    if resposta == '0':
        break
    elif resposta == '1':
        modo_facil()
    elif resposta == '2':
        modo_dificil()
    elif resposta == '3':
        tutorial()
